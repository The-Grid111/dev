name: Apply file from issue body

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created]

jobs:
  apply:
    # Run when:
    # - an issue is opened/edited and its body contains `/patch`
    # - OR a new comment starts with `/patch`
    if: >
      (github.event_name == 'issues' &&
       contains(github.event.issue.body, '/patch ')) ||
      (github.event_name == 'issue_comment' &&
       startsWith(github.event.comment.body, '/patch '))
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Extract patch block
        id: extract
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.comment
              ? context.payload.comment.body
              : context.payload.issue.body;

            const m = body.match(/\/patch\s+path=([^\s]+)[\s\S]*?<<<FILE\s*\n([\s\S]*?)\nFILE/);
            if (!m) {
              core.setFailed('No valid /patch block found. Expected:\n/patch path=relative/file\n<<<FILE\n...content...\nFILE');
              return;
            }
            const filePath = m[1].trim();
            const content  = m[2];

            core.setOutput('path', filePath);
            core.setOutput('content', content);

      - name: Write file
        run: |
          mkdir -p "$(dirname '${{ steps.extract.outputs.path }}')"
          printf "%s" "${{ steps.extract.outputs.content }}" > "${{ steps.extract.outputs.path }}"

      - name: Commit & push
        uses: EndBug/add-and-commit@v9
        with:
          add: "${{ steps.extract.outputs.path }}"
          message: "chore(patch): ${{ steps.extract.outputs.path }} via issue body/comment"
          default_author: github_actions

      - name: Confirm in issue
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = (context.payload.issue?.number) ||
              Number(context.payload.comment.issue_url.split('/').pop());
            const ok = '${{ job.status }}' === 'success';
            const path = '${{ steps.extract.outputs.path }}';
            const body = ok
              ? `✅ Applied and pushed: \`${path}\``
              : `❌ Patch failed for \`${path}\`. See workflow logs.`;
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number,
              body
            });
