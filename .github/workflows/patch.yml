name: Patch file from issue comment

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  issues: read

jobs:
  patch:
    # Only run when a comment contains "/patch "
    if: contains(github.event.comment.body, '/patch ')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Extract path and file contents from comment
        id: extract
        run: |
          python - <<'PY'
          import os, re, sys, pathlib
          body = os.environ['BODY']
          m = re.search(r'/patch\s+path=([^\s]+)\s+<<<FILE\s*(.*?)\s*FILE', body, re.S|re.I)
          if not m:
            print("::error::Could not find /patch command with <<<FILE ... FILE block.")
            sys.exit(1)
          path = m.group(1).strip()
          content = m.group(2)
          pathlib.Path(path).parent.mkdir(parents=True, exist_ok=True)
          with open("patch_path.txt","w", encoding="utf-8") as f: f.write(path)
          with open("patch_content.txt","w", encoding="utf-8") as f: f.write(content)
          PY
        env:
          BODY: ${{ github.event.comment.body }}

      - name: Write file
        id: write
        run: |
          path="$(cat patch_path.txt)"
          mkdir -p "$(dirname "$path")"
          mv patch_content.txt "$path"
          echo "path=$path" >> "$GITHUB_OUTPUT"

      - name: Commit & push
        run: |
          git config user.name  "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add -A
          git commit -m "Patch: ${{ steps.write.outputs.path }}" || echo "No changes to commit."
          git push
