name: Patch from issue comments

on:
  issue_comment:
    types: [created]

# lets the bot write to the repo
permissions:
  contents: write
  pull-requests: write
  issues: read

jobs:
  patch:
    # only run when the comment contains our directive
    if: contains(github.event.comment.body, '/patch path=')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout default branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.repository.default_branch }}
          fetch-depth: 0

      - name: Apply patch from comment
        env:
          BODY: ${{ github.event.comment.body }}
          BRANCH: ${{ github.event.repository.default_branch }}
        run: |
          set -euo pipefail

          # 1) find target path
          PATH_LINE=$(printf '%s' "$BODY" | grep -oE '/patch path=[^[:space:]]+' || true)
          if [ -z "$PATH_LINE" ]; then
            echo "No '/patch path=' found in comment"; exit 1
          fi
          TARGET="${PATH_LINE#*=}"
          echo "Target file: $TARGET"

          # 2) extract file content between <<<FILE and a line that's exactly 'FILE'
          CONTENT=$(printf '%s\n' "$BODY" | awk '/<<<FILE/{flag=1;next}/^FILE$/{flag=0}flag')
          if [ -z "$CONTENT" ]; then
            echo "No content found between <<<FILE and FILE markers"; exit 1
          fi

          # 3) write, commit, push
          mkdir -p "$(dirname "$TARGET")"
          printf '%s\n' "$CONTENT" > "$TARGET"

          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "$TARGET"

          # if nothing changed, exit gracefully (prevents failures)
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "Patch ${TARGET} via issue comment #${{ github.event.issue.number }}"
          git push origin HEAD:"$BRANCH"
