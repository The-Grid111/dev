name: Build File Inventory

on:
  push:
    branches: [ main ]
    # avoid infinite loops when the workflow commits refreshed inventories
    paths-ignore:
      - 'dev/dev/data/**'
      - '.github/workflows/**'   # (optional) don't re-run only from workflow edits
  workflow_dispatch:
  schedule:
    - cron: '17 2 * * *'  # daily refresh (UTC)

permissions:
  contents: write

jobs:
  inventory:
    name: File inventory
    runs-on: ubuntu-latest
    # never mark the whole commit red if this job hiccups
    continue-on-error: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate inventory (tree, JSON, metrics)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dev/dev/data

          node - <<'NODE'
          const fs = require('fs');
          const path = require('path');

          const ROOT = process.cwd();
          const IGNORE = new Set([
            '.git','node_modules','.cache','.next','.DS_Store',
            '.venv','venv','.pytest_cache','dist','build'
          ]);

          function walk(dir) {
            const out = [];
            for (const ent of fs.readdirSync(dir, { withFileTypes: true })) {
              if (IGNORE.has(ent.name)) continue;
              const full = path.join(dir, ent.name);
              const rel  = full.replace(ROOT + path.sep, '');
              if (ent.isDirectory()) out.push(...walk(full));
              else out.push(rel);
            }
            return out;
          }

          const files = walk(ROOT).sort();
          // Save plain text list
          fs.writeFileSync('dev/dev/data/file-tree.txt', files.join('\n'));

          // Save JSON list
          fs.writeFileSync('dev/dev/data/file-tree.json', JSON.stringify(files, null, 2));

          // Simple repo metrics
          const byExt = {};
          for (const f of files) {
            const ext = path.extname(f) || 'noext';
            byExt[ext] = (byExt[ext] || 0) + 1;
          }
          const metrics = {
            generated_at: new Date().toISOString(),
            file_count: files.length,
            by_extension: byExt
          };
          fs.writeFileSync('dev/dev/data/repo-metrics.json', JSON.stringify(metrics, null, 2));
          NODE

      - name: Upload inventory artifact
        uses: actions/upload-artifact@v4
        with:
          name: repo-inventory
          path: |
            dev/dev/data/file-tree.txt
            dev/dev/data/file-tree.json
            dev/dev/data/repo-metrics.json

      # Optional: commit the refreshed inventories back to the repo (safe, no loops)
      - name: Commit inventory back to repo
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add dev/dev/data/file-tree.txt dev/dev/data/file-tree.json dev/dev/data/repo-metrics.json || true
          git diff --cached --quiet && echo "No inventory changes to commit." && exit 0
          git commit -m "chore(inventory): refresh repo inventory [skip ci]"
          git push || true
