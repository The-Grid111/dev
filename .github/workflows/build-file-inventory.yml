name: Build File Inventory

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build-inventory:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ===== apply-update: runs FIRST so inventory/snapshot include your edits =====
      - name: Setup Node (for apply script)
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Apply update.json ops
        run: node scripts/apply-update.mjs

      # ===== inventory outputs go to dev/dev/data/ =====
      - name: Ensure data dirs
        run: |
          mkdir -p dev/dev/data
          mkdir -p dev/dev/data/state_packs

      - name: Build file-tree.txt
        run: |
          find . -type f \
            -not -path "./.git/*" \
            -not -path "./node_modules/*" \
            -printf "%P\n" | sort > dev/dev/data/file-tree.txt

      - name: Build file-tree.json + repo-metrics.json (Node)
        run: |
          node - <<'NODE'
          import fs from 'node:fs';
          import path from 'node:path';
          const ignore = p => p.startsWith('.git/') || p.startsWith('node_modules/');
          function walk(dir='.') {
            let files = [];
            for (const entry of fs.readdirSync(dir, { withFileTypes: true })) {
              const rel = path.posix.join(dir, entry.name).replace(/^\.\//,'');
              if (ignore(rel)) continue;
              if (entry.isDirectory()) files = files.concat(walk(rel));
              else files.push(rel);
            }
            return files.sort();
          }
          const files = walk('.');
          const tree = files.map(p => {
            const st = fs.statSync(p);
            return { path: p, bytes: st.size };
          });
          fs.writeFileSync('dev/dev/data/file-tree.json', JSON.stringify(tree, null, 2));
          const metrics = {
            files: tree.length,
            bytes: tree.reduce((a,b)=>a+b.bytes,0),
            dirs: (()=>{
              const s = new Set();
              for (const f of files) {
                const parts = f.split('/');
                for (let i=0;i<parts.length-1;i++) s.add(parts.slice(0,i+1).join('/'));
              }
              return s.size;
            })(),
            byExt: (()=>{
              const m = {};
              for (const {path: p} of tree) {
                const ext = (p.includes('.') ? p.split('.').pop() : '').toLowerCase();
                m[ext] = (m[ext]||0)+1;
              }
              return m;
            })(),
            generatedAt: new Date().toISOString()
          };
          fs.writeFileSync('dev/dev/data/repo-metrics.json', JSON.stringify(metrics, null, 2));
          console.log("metrics", metrics);
          NODE

      - name: Auto-commit inventory
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update build-file-inventory (auto)"
          commit_user_name: github-actions[bot]
          commit_user_email: 41898282+github-actions[bot]@users.noreply.github.com
          file_pattern: dev/dev/data/file-tree.txt dev/dev/data/file-tree.json dev/dev/data/repo-metrics.json
