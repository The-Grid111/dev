{
  "ops": [
    {
      "op": "write",
      "path": ".github/workflows/build-file-inventory.yml",
      "content": "name: Build File Inventory\n\non:\n  push:\n    branches: [ main ]\n    paths: [ 'assets/data/update.json' ]\n\npermissions:\n  contents: write\n\njobs:\n  inventory:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          fetch-depth: 0\n          persist-credentials: true\n\n      - name: Setup Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: 20\n\n      - name: Generate inventory stubs\n        run: |\n          mkdir -p dev/dev/data\n          echo '{\"files\":[]}' > dev/dev/data/file-tree.json\n          echo '# Empty inventory' > dev/dev/data/file-tree.txt\n          echo '{\"metrics\":{}}' > dev/dev/data/repo-metrics.json\n\n      - name: Stage changes & summarize\n        id: stage\n        shell: bash\n        run: |\n          git add dev/dev/data/file-tree.json dev/dev/data/file-tree.txt dev/dev/data/repo-metrics.json\n          if git diff --cached --quiet; then\n            echo \"NO_CHANGES=true\" >> $GITHUB_ENV\n            echo \"### Build File Inventory\\n\\nNo changes to commit.\" >> \"$GITHUB_STEP_SUMMARY\"\n          else\n            COUNT=$(git diff --name-only --cached | wc -l | tr -d ' ')\n            echo \"FILES_CHANGED=$COUNT\" >> $GITHUB_ENV\n            echo \"### Build File Inventory\\n\\n**Files staged:** $COUNT\" >> \"$GITHUB_STEP_SUMMARY\"\n          fi\n\n      - name: Auto-commit inventory (safe rebase)\n        if: env.NO_CHANGES != 'true'\n        shell: bash\n        run: |\n          set -e\n          git config user.name \"github-actions[bot]\"\n          git config user.email \"41898282+github-actions[bot]@users.noreply.github.com\"\n\n          # small delay to avoid racing other jobs that also push to main\n          sleep 10\n\n          git fetch origin main\n          # make sure we are on a branch ref (not detached)\n          git checkout -B safe-inventory\n          git rebase origin/main || echo \"Rebase failed, will force push\"\n          if git diff --cached --quiet; then\n            echo \"Nothing to commit after rebase\"\n          else\n            git commit -m \"[auto] update build-file-inventory\" --no-verify --signoff || true\n          fi\n          git push origin HEAD:main || git push origin HEAD:main --force\n"
    },
    {
      "op": "write",
      "path": ".github/workflows/repo-snapshot.yml",
      "content": "name: Repo Snapshot\n\non:\n  push:\n    branches: [ main ]\n    paths: [ 'assets/data/update.json' ]\n\npermissions:\n  contents: write\n\njobs:\n  snapshot:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          fetch-depth: 0\n          persist-credentials: true\n\n      - name: Setup Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: 20\n\n      - name: Create snapshot\n        run: |\n          mkdir -p dev/dev/archive\n          node -e \"const fs=require('fs');const p='dev/dev/archive/snapshot_'+Date.now()+'.json';fs.writeFileSync(p, JSON.stringify({ generated_at:new Date().toISOString() }, null, 2));console.log('Wrote',p);\"\n\n      - name: Stage changes\n        run: |\n          git add dev/dev/archive/snapshot_*.json\n          if git diff --cached --quiet; then\n            echo \"NO_CHANGES=true\" >> $GITHUB_ENV\n            echo \"### Repo Snapshot\\n\\nNo new snapshot file.\" >> \"$GITHUB_STEP_SUMMARY\"\n          else\n            echo \"### Repo Snapshot\\n\\nSnapshot staged.\" >> \"$GITHUB_STEP_SUMMARY\"\n          fi\n\n      - name: Commit & push (safe rebase)\n        if: env.NO_CHANGES != 'true'\n        shell: bash\n        run: |\n          set -e\n          git config user.name \"github-actions[bot]\"\n          git config user.email \"41898282+github-actions[bot]@users.noreply.github.com\"\n\n          # small delay to avoid racing other jobs that also push to main\n          sleep 10\n\n          git fetch origin main\n          git checkout -B safe-snapshot\n          git rebase origin/main || echo \"Rebase failed, will force push\"\n          git commit -m \"Repo snapshot (auto)\" --no-verify --signoff || true\n          git push origin HEAD:main || git push origin HEAD:main --force\n"
    }
  ]
}
